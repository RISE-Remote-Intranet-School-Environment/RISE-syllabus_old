openapi: 3.1.0
info:
  title: Syllabus_api
  version: '1.0'
  termsOfService: 'https://github.com/smarbal/syllabus-webservice.git'
servers:
  - url: 'https://api.ecam.be/syllabus-system'
paths:
  '/Course/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Name Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
            application/xml:
              schema:
                type: object
                properties: {}
        '404':
          description: Requested object was not found in our database
          content:
            application/json:
              schema:
                type:
                  - 'null'
                  - string
      operationId: get-Course-CourseID
      description: Get course name.
      parameters: []
  '/Document/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Post Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '404':
          description: |
            Requested object was not found in our database
          content:
            application/json:
              schema:
                type:
                  - 'null'
                  - string
      operationId: get-Document-name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      parameters: []
      description: Get Document name
  '/Order/{orderID}':
    parameters:
      - schema:
          type: string
        name: orderID
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Post Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: |
            Requested object was not found in our database
          content:
            application/json:
              schema:
                type:
                  - 'null'
                  - integer
      operationId: get-Order-orderID
      description: Get order ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
  '/Student/{studentID}':
    parameters:
      - schema:
          type: string
        name: studentID
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Post Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: |
            Requested object was not found in our database
          content:
            application/json:
              schema:
                type:
                  - integer
                  - 'null'
      operationId: get-Student-studentID
      description: Get Student ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
  '/Teacher/{trigram}':
    parameters:
      - schema:
          type: string
        name: trigram
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Post Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '404':
          description: Requested object was not found in our database
          content:
            application/json:
              schema:
                type:
                  - 'null'
                  - string
      operationId: get-Teacher-trigram
      description: Get Teacher Trigram
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
  '/User/{firstName}':
    parameters:
      - schema:
          type: string
        name: firstName
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Post Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type:
                  - string
                  - 'null'
      operationId: get-User-firstName
      description: Get User FirstName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
  '/Course/{name}/Teacher':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-Cours-name-Teacher
    post:
      summary: ''
      operationId: post-Cours-name-Teacher
      responses:
        '200':
          description: New Post Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Missing argument
          content:
            application/json:
              schema:
                type: 'null'
        '404':
          description: |
            Requested object was not found in our database
          content:
            application/json:
              schema:
                type:
                  - 'null'
                  - string
      description: Add new Teacher for a course
  '/Course/{name}/Student':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: ''
    post:
      summary: ''
      operationId: post-Course-name-Student
      responses:
        '200':
          description: New post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Missing argument
          content:
            application/json:
              schema:
                type:
                  - 'null'
                  - string
        '404':
          description: |
            Requested object was not found in our database
          content:
            application/json:
              schema:
                type:
                  - string
                  - 'null'
      description: Add new Student for a course
  '/Course/{name}/Syllabus':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: New post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type:
                  - 'null'
                  - string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type:
                  - string
                  - 'null'
      operationId: get-Course-name-Syllabus
      description: Add new syllabus for a course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
    post:
      summary: ''
      operationId: post-Course-name-Syllabus
      responses:
        '200':
          description: OK
components:
  schemas:
    Course:
      title: Course
      type: object
      description: Course class
      properties:
        '':
          type: string
        teachers:
          type: array
          items: {}
        UE:
          type: string
        students:
          type: array
          items: {}
        academic_year:
          type: string
        syllabi:
          type: array
          items: {}
      examples:
        - '': string
          teachers:
            - null
          UE: string
          students:
            - null
          academic_year: string
          syllabi:
            - null
    Document:
      title: Document
      type: object
      description: Classe Document
      properties:
        name:
          type: string
        author:
          type: array
          items: {}
        publish_date:
          type: number
        pages:
          type: integer
    Order:
      title: Order
      type: object
      description: Classe Order
      properties:
        orderID:
          type: integer
        student: {}
        syllabi:
          type: array
          items: {}
        orderDate: {}
        price:
          type: number
        state:
          type: string
        '':
          type: string
    Student:
      title: Student
      type: object
      description: 'Classe Student extends User '
      properties:
        studentID:
          type: integer
        PAE:
          type: array
          items: {}
    Teacher:
      title: Teacher
      type: object
      description: Classe Teacher extends User
      properties:
        trigram:
          type: string
        courses:
          type: array
          items: {}
    User:
      title: User
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
